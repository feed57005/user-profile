# Window split keys ala vim
bind-key v split-window -h
#bind-key b split-window

# Use Ctrl-a instead of default Ctrl-b
unbind-key C-b
set-option -g prefix C-a

# 2x Ctrl-a last window toggle
bind-key C-a last-window

# Ctrl-a + a sends Ctrl-a to tty
bind-key a send-prefix

# Start numbering at 1
set-option -g base-index 1

# Allows for faster key repetition
set-option -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi

# Clipboard support
# for Linux (requires xclip)
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -sel clipboard"
# for OSX
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Report as 256color terminal
#set-option -g default-terminal "xterm-256color"
#set-option -g default-terminal "screen"

# Enable mouse
set-option -g mouse on

set-option -g status-left-length 20
set-option -g status-left '#[fg=white,bg=red] #H #[fg=red,bg=default]'
set-option -g status-right '#[fg=red,bg=default]#[fg=white,bg=red] %a %H:%M:%S %Y-%m-%d'

# Reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

#bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
